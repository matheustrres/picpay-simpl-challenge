generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id        String   @id @default(uuid())
  fullName  String
  email     String   @unique
  password  String
  CPF       String   @unique
  role      String
  wallet    Wallet?  @relation(fields: [walletId], references: [id])
  walletId  Int      @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@index([email, CPF])
  @@map("customers")
}

model Shopkeeper {
  id        String   @id @default(uuid())
  fullName  String
  email     String   @unique
  password  String
  CPF       String   @unique
  CNPJ      String   @unique
  role      String
  wallet    Wallet?  @relation(fields: [walletId], references: [id])
  walletId  Int      @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@index([email, CPF, CNPJ])
  @@map("shopkeepers")
}

model Wallet {
  id           Int           @id @default(autoincrement())
  balance      Float         @default(0)
  transactions Transaction[]
  customer     Customer?
  shopkeeper   Shopkeeper?
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @default(now()) @updatedAt @map("updated_at")

  @@map("wallets")
}

model Transaction {
  id          Int      @id @default(autoincrement())
  amount      Float
  payerId     String   @map("payer_id")
  payeeId     String   @map("payee_id")
  description String?
  wallet      Wallet   @relation(fields: [walletId], references: [id])
  walletId    Int
  createdAt   DateTime @default(now()) @map("created_at")

  @@index([walletId])
  @@map("transactions")
}
